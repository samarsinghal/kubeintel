{{- if .Values.validation.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "kubeintel.fullname" . }}-validation
  labels:
    {{- include "kubeintel.labels" . | nindent 4 }}
    app.kubernetes.io/component: validation
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: {{ include "kubeintel.fullname" . }}-validation
      labels:
        {{- include "kubeintel.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: validation
    spec:
      restartPolicy: Never
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kubeintel.serviceAccountName" . }}
      containers:
        - name: config-validator
          image: "{{ .Values.validation.image.repository }}:{{ .Values.validation.image.tag }}"
          imagePullPolicy: {{ .Values.validation.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |
              echo "Validating KubeIntel Claude 3.5 Configuration..."
              
              # Check model configuration
              {{- if .Values.config.strands.legacyMode }}
              echo "✓ Legacy mode enabled - using Claude 3 Haiku"
              MODEL="{{ .Values.config.strands.legacyModel | default "anthropic.claude-3-haiku-20240307-v1:0" }}"
              {{- else }}
              echo "✓ Claude 3.5 mode enabled"
              MODEL="{{ .Values.config.strands.model }}"
              FALLBACK_MODEL="{{ .Values.config.strands.fallbackModel }}"
              
              # Validate Claude 3.5 models
              if [[ "$MODEL" != *"claude-3-5"* ]]; then
                echo "❌ ERROR: Primary model is not Claude 3.5: $MODEL"
                echo "   Expected: anthropic.claude-3-5-sonnet-20241022-v2:0"
                exit 1
              fi
              
              if [[ -n "$FALLBACK_MODEL" && "$FALLBACK_MODEL" != *"claude-3"* ]]; then
                echo "❌ ERROR: Invalid fallback model: $FALLBACK_MODEL"
                echo "   Expected: anthropic.claude-3-5-haiku-20241022-v1:0 or anthropic.claude-3-haiku-20240307-v1:0"
                exit 1
              fi
              {{- end }}
              
              # Validate session TTL
              SESSION_TTL={{ .Values.config.strands.sessionTtl }}
              if [[ $SESSION_TTL -lt 3600 ]]; then
                echo "❌ ERROR: Session TTL too low: ${SESSION_TTL}s"
                echo "   Minimum recommended: 3600s (1 hour)"
                echo "   Claude 3.5 recommended: 7200s (2 hours)"
                exit 1
              fi
              
              if [[ $SESSION_TTL -lt 7200 ]]; then
                echo "⚠ WARNING: Session TTL could be optimized: ${SESSION_TTL}s"
                echo "   Claude 3.5 recommended: 7200s (2 hours) for better context retention"
              fi
              
              # Validate analysis timeout
              ANALYSIS_TIMEOUT={{ .Values.config.analysisTimeout }}
              if [[ $ANALYSIS_TIMEOUT -lt 120 ]]; then
                echo "❌ ERROR: Analysis timeout too low: ${ANALYSIS_TIMEOUT}s"
                echo "   Minimum recommended for Claude 3.5: 180s"
                exit 1
              fi
              
              # Validate streaming configuration
              {{- if not .Values.config.strands.disableStreaming }}
              echo "⚠ WARNING: Streaming not disabled"
              echo "   Recommendation: Set disableStreaming: true for Claude 3.5 compatibility"
              {{- end }}
              
              # Validate resource configuration
              {{- if .Values.resources.limits.memory }}
              MEMORY_LIMIT="{{ .Values.resources.limits.memory }}"
              if [[ "$MEMORY_LIMIT" == *"Mi" ]]; then
                MEMORY_MB=${MEMORY_LIMIT%Mi}
                if [[ $MEMORY_MB -lt 1024 ]]; then
                  echo "⚠ WARNING: Memory limit may be too low for Claude 3.5: $MEMORY_LIMIT"
                  echo "   Recommended: At least 2Gi for optimal performance"
                fi
              elif [[ "$MEMORY_LIMIT" == *"Gi" ]]; then
                MEMORY_GB=${MEMORY_LIMIT%Gi}
                if [[ $MEMORY_GB -lt 1 ]]; then
                  echo "⚠ WARNING: Memory limit may be too low for Claude 3.5: $MEMORY_LIMIT"
                  echo "   Recommended: At least 2Gi for optimal performance"
                fi
              fi
              {{- end }}
              
              # Validate AWS region for Claude 3.5 availability
              AWS_REGION="{{ .Values.aws.region }}"
              case "$AWS_REGION" in
                us-east-1|us-west-2)
                  echo "✓ AWS region $AWS_REGION has good Claude 3.5 support"
                  ;;
                *)
                  echo "⚠ WARNING: AWS region $AWS_REGION may have limited Claude 3.5 availability"
                  echo "   Consider using us-east-1 or us-west-2 for best support"
                  ;;
              esac
              
              # Validate IAM configuration
              {{- if .Values.aws.roleArn }}
              echo "✓ Using IAM role for authentication (recommended)"
              {{- else if or .Values.aws.accessKeyId .Values.aws.secretAccessKey }}
              echo "⚠ WARNING: Using hardcoded AWS credentials"
              echo "   Recommendation: Use IAM roles (IRSA) for better security"
              {{- else }}
              echo "❌ ERROR: No AWS authentication configured"
              echo "   Configure either IAM role or AWS credentials"
              exit 1
              {{- end }}
              
              echo ""
              echo "✅ Configuration validation completed successfully"
              echo "KubeIntel is ready for Claude 3.5 deployment"
          env:
            - name: VALIDATION_MODE
              value: "true"
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
{{- end }}